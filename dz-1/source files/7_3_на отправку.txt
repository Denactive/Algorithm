https://contest.yandex.ru/contest/25759/run-report/50742723/

#include <iostream>
#include <cmath>

class BitComparator {
public:
	bool operator()(const long long& l, int digit)
	{
		if ((l >> digit) % 2 == 1)
			return true;
		else
			return false;
	}
};

template <typename T, typename Comparator>
int partition(T* a, int len, int digit) {
	// [p...ji]
	Comparator cmp;
	int i = len - 1;
	int j = len - 1;  // j < i
	//  • Итератор (индекс) i указывает на начало группы элементов, меньших либо равных опорному.
	//	• Итератор j меньше i, итератор j указывает на последений нерассмотренный элемент.
	while (j > -1) {
		if (cmp(a[j], digit)) {
			std::swap(a[i], a[j]);
			i--;
		}
		j--;
	}
	return i + 1;
}

void MSD(long long* a, int n, int digit) {
	if (digit < 0) return;
	int border = partition<long long, BitComparator>(a, n, digit);
	if (border > 1) MSD(a, border, digit - 1);
	if (border < n - 1) MSD(&a[border], n - border, digit - 1);
}

int main() {
	long long n;
	std::cin >> n;
	long long* a = new long long[n];
	long long max = 0;
	for (int i = 0; i < n; ++i) {
		std::cin >> a[i];
		if (a[i] > max)
			max = a[i];
	}

	int num_digits = 1;
	if (max != 0)
		num_digits = log(max) / log(2);

	MSD(a, n, num_digits);
	for (int i = 0; i < n; ++i) {
		std::cout << a[i];
		if (i != n - 1)
			std::cout << " ";
	}
	delete[] a;
	return 0;
}